(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./dist/index.js":function(e,a,t){"use strict";e.exports=t("./dist/tiny-mobx-form.cjs.production.min.js")},"./dist/tiny-mobx-form.cjs.production.min.js":function(e,a,t){"use strict";var n=t("./node_modules/tslib/tslib.es6.js"),i=t("./node_modules/mobx/lib/mobx.module.js");function l(e,a){for(var t=0;t<a.length;t++){var n=a[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function r(e,a,t){return a&&l(e.prototype,a),t&&l(e,t),e}function o(){return(o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}var s=function(e,a){return void 0===a&&(a=""),e?a:void 0},d=function(e){return s(!e.value,"This field is required.")},A=function(e,a){return s(!(e.value&&e.form.fields[a]),"The "+e.form.fields[a].label+" field is required since the "+e.label+" field is filled out.")},c=function(e,a,t){return void 0===a&&(a=0),void 0===t&&(t=1/0),s(!(e.value&&e.value.length>=Number(a)&&e.value.length<=Number(t)),function(e,a){return"Must be at least "+e+" and no more than "+a+" characters"}(a.toString(10),t.toString(10)))},m=function(e,a){return s(e.value!==e.form.fields[a].value,"The "+e.label+" and "+e.form.fields[a].label+" do not match.")},u=/^[a-zA-Z\s]*$/,g=function(e){var a=e.value;return s(!!a&&!u.test(a),"Please enter letters only.")},b=/^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$/,p=function(e){var a=e.value;return s(!!a&&!b.test(a),"Please enter a valid email address.")},h=/^(\()?[2-9]\d{2}(-|.|\))?\d{3}(-|.)?\d{4}$/,f=function(e){var a=e.value;return s(!!a&&!h.test(a),"Please enter a valid phone number.")},N=/^\d{5}-\d{4}|\d{5}|[A-Z]\d[A-Z] \d[A-Z]\d$/,w=function(e){var a=e.value;return s(!!a&&!N.test(a),"Please enter a valid postal number.")},B=/^\d+$/,O=function(e){var a=e.value;return s(!!a&&!B.test(a),"Please enter a valid number.")},j=/^\w+$/,v=function(e){var a=e.value;return s(!!a&&!j.test(a),"Please do not use special characters.")},I=function(e,a,t){var n=e.value;return void 0===a&&(a=0),void 0===t&&(t=1/0),s(!(!n||Number(n)>=a&&Number(n)<=t),function(e,a){return"Please enter a number between "+e+" and "+a+"."}(a.toString(10),t.toString(10)))},V=function(e){for(var a=e.value,t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return s(!!a&&!n.includes(a),function(e){return"Please choose one of these choices: "+e.join(", ")}(n))},C=function(e){return void 0===e&&(e={}),o({required:d,"required-if":A,length:c,letters:g,email:p,match:m,number:O,phone:f,postal:w,alpha:v,size:I,"one-of":V},e)},Q=function(){function e(e,a,t){var n=a.name,i=a.label,l=void 0===i?"":i,r=a.placeholder,o=void 0===r?"":r,s=a.validation,d=void 0===s?"":s,A=a.initialValue,c=void 0===A?"":A;this.form=e,this.validators=t,this.isTouched=!1,this.name=n,this.label=l,this.placeholder=o,this.initialValue=c,this._value=c,this.validation=d}return e.prototype.reset=function(){this._value=this.initialValue,this.isTouched=!1},r(e,[{key:"value",get:function(){return this._value},set:function(e){this._value=e,this.isTouched=!0}},{key:"isValid",get:function(){return 0===this.errors.length}},{key:"isDirty",get:function(){return this.initialValue!==this.value}},{key:"errors",get:function(){return a=this.validators,(e=this).validation.split("|").map((function(t){var n=t.split(":"),i=n[0],l=n[1],r=[];if(l&&(r=l.split(",")),!(i in a))throw new Error("There is no validator with the name of "+i);return a[i].apply(a,[e].concat(r))})).filter(Boolean);var e,a}},{key:"hasErrors",get:function(){return this.errors.length>0}}]),e}();n.__decorate([i.observable],Q.prototype,"initialValue",void 0),n.__decorate([i.observable],Q.prototype,"_value",void 0),n.__decorate([i.observable],Q.prototype,"isTouched",void 0),n.__decorate([i.observable],Q.prototype,"validation",void 0),n.__decorate([i.computed],Q.prototype,"value",null),n.__decorate([i.computed],Q.prototype,"isValid",null),n.__decorate([i.computed],Q.prototype,"isDirty",null),n.__decorate([i.computed],Q.prototype,"errors",null),n.__decorate([i.computed],Q.prototype,"hasErrors",null),n.__decorate([i.action("TinyMobxForm | Field | reset")],Q.prototype,"reset",null);var F=function(){function e(e,a,t){var n=this;void 0===a&&(a={}),void 0===t&&(t={additionalValidators:{}}),this.fieldNames=[],this.fields={},e.forEach((function(e){n.fieldNames.push(e.name);var i=o({},e,{initialValue:a[e.name]||e.initialValue});n.fields[i.name]=new Q(n,i,C(t.additionalValidators))}))}var a=e.prototype;return a.showErrors=function(){var e=this;this.fieldNames.forEach((function(a){e.fields[a].isTouched=!0}))},a.reset=function(){var e=this;this.fieldNames.forEach((function(a){return e.fields[a].reset()}))},r(e,[{key:"isValid",get:function(){var e=this;return 0===this.fieldNames.filter((function(a){return!e.fields[a].isValid})).length}},{key:"errors",get:function(){var e=this;return this.fieldNames.flatMap((function(a){return e.fields[a].errors}))}},{key:"isDirty",get:function(){var e=this;return this.fieldNames.some((function(a){return e.fields[a].isDirty}))}},{key:"values",get:function(){var e=this;return this.fieldNames.reduce((function(a,t){var n;return o({},a,((n={})[t]=e.fields[t].value,n))}),{})}}]),e}();n.__decorate([i.observable],F.prototype,"fieldNames",void 0),n.__decorate([i.observable.struct],F.prototype,"fields",void 0),n.__decorate([i.computed],F.prototype,"isValid",null),n.__decorate([i.computed],F.prototype,"errors",null),n.__decorate([i.computed],F.prototype,"isDirty",null),n.__decorate([i.computed],F.prototype,"values",null),n.__decorate([i.action("TinyMobxForm | showErrors")],F.prototype,"showErrors",null),n.__decorate([i.action("TinyMobxForm | reset")],F.prototype,"reset",null),a.Field=Q,a.Form=F},"./example/introduction.mdx":function(e,a,t){"use strict";t.r(a);var n=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),i=t("./node_modules/react/index.js"),l=t.n(i),r=t("./node_modules/@mdx-js/react/dist/index.es.js"),o=t("./node_modules/docz/dist/index.esm.js"),s=t("./node_modules/mobx-react/dist/mobx-react.module.js"),d=t("./node_modules/evergreen-ui/esm/text-input/src/TextInputField.js"),A=t("./dist/index.js"),c=new A.Form([{name:"firstName",placeholder:"John",label:"First Name",validation:"required|letters|length:2,20",initialValue:""},{name:"lastName",placeholder:"Appleseed",label:"Last Name",validation:"required|letters|length:2,20",initialValue:""},{name:"email",placeholder:"jon@gmail.com",label:"Email",validation:"required|email",initialValue:""},{name:"age",placeholder:"22",label:"Age",validation:"required|number|size:18,100",initialValue:""}]).fields;var m=Object(s.a)((function(){return l.a.createElement("div",null,l.a.createElement("div",null,l.a.createElement(d.a,{required:!0,type:"text",name:"firstName",value:c.firstName.value,placeholder:c.firstName.placeholder,label:c.firstName.label,validationMessage:c.firstName.isDirty&&c.firstName.hasErrors&&c.firstName.errors.join(" "),isInvalid:c.firstName.isDirty&&c.firstName.hasErrors,onChange:function(e){return c.firstName.value=e.currentTarget.value}})),l.a.createElement("div",null,l.a.createElement(d.a,{required:!0,type:"text",name:"lastName",value:c.lastName.value,placeholder:c.lastName.placeholder,label:c.lastName.label,validationMessage:c.lastName.isDirty&&c.lastName.hasErrors&&c.lastName.errors.join(" "),isInvalid:c.lastName.isDirty&&c.lastName.hasErrors,onChange:function(e){return c.lastName.value=e.currentTarget.value}})),l.a.createElement("div",null,l.a.createElement(d.a,{required:!0,type:"text",name:"email",value:c.email.value,placeholder:c.email.placeholder,label:c.email.label,validationMessage:c.email.isDirty&&c.email.hasErrors&&c.email.errors.join(" "),isInvalid:c.email.isDirty&&c.email.hasErrors,onChange:function(e){return c.email.value=e.currentTarget.value}})),l.a.createElement("div",null,l.a.createElement(d.a,{required:!0,type:"text",name:"age",value:c.age.value,placeholder:c.age.placeholder,label:c.age.label,validationMessage:c.age.isDirty&&c.age.hasErrors&&c.age.errors.join(" "),isInvalid:c.age.isDirty&&c.age.hasErrors,onChange:function(e){return c.age.value=e.currentTarget.value},error:c.age.isDirty&&c.age.hasErrors&&c.age.errors.join(" ")})))})),u=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),g=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),b=new A.Form([{name:"firstName",placeholder:"John",label:"First Name",validation:"required|letters|length:2,20",initialValue:""},{name:"lastName",placeholder:"Appleseed",label:"Last Name",validation:"required|letters|length:2,20",initialValue:""},{name:"email",placeholder:"jon@gmail.com",label:"Email",validation:"required|email",initialValue:""},{name:"age",placeholder:"22",label:"Age",validation:"required|number|size:18,100",initialValue:""}]).fields;var p=Object(s.a)((function(){var e=Object(i.useState)([]),a=Object(g.a)(e,2),t=a[0],n=a[1];return l.a.createElement("div",null,l.a.createElement("div",null,l.a.createElement(d.a,{required:!0,type:"text",name:"firstName",value:b.firstName.value,placeholder:b.firstName.placeholder,label:b.firstName.label,validationMessage:t.includes("firstName")&&b.firstName.hasErrors&&b.firstName.errors.join(" "),onBlur:function(){return n([].concat(Object(u.a)(t),["firstName"]))},isInvalid:t.includes("firstName")&&b.firstName.hasErrors,onChange:function(e){return b.firstName.value=e.currentTarget.value}})),l.a.createElement("div",null,l.a.createElement(d.a,{required:!0,type:"text",name:"lastName",value:b.lastName.value,placeholder:b.lastName.placeholder,label:b.lastName.label,validationMessage:t.includes("lastName")&&b.lastName.hasErrors&&b.lastName.errors.join(" "),onBlur:function(){return n([].concat(Object(u.a)(t),["lastName"]))},isInvalid:t.includes("lastName")&&b.lastName.hasErrors,onChange:function(e){return b.lastName.value=e.currentTarget.value}})),l.a.createElement("div",null,l.a.createElement(d.a,{required:!0,type:"text",name:"email",value:b.email.value,placeholder:b.email.placeholder,label:b.email.label,validationMessage:t.includes("email")&&b.email.hasErrors&&b.email.errors.join(" "),onBlur:function(){return n([].concat(Object(u.a)(t),["email"]))},isInvalid:t.includes("email")&&b.email.hasErrors,onChange:function(e){return b.email.value=e.currentTarget.value}})),l.a.createElement("div",null,l.a.createElement(d.a,{required:!0,type:"text",name:"age",value:b.age.value,placeholder:b.age.placeholder,label:b.age.label,validationMessage:t.includes("age")&&b.age.hasErrors&&b.age.errors.join(" "),onBlur:function(){return n([].concat(Object(u.a)(t),["age"]))},isInvalid:t.includes("age")&&b.age.hasErrors,onChange:function(e){return b.age.value=e.currentTarget.value},error:b.age.isDirty&&b.age.hasErrors&&b.age.errors.join(" ")})))}));t.d(a,"default",(function(){return N}));var h={},f="wrapper";function N(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(r.b)(f,Object.assign({},h,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"tiny-mobx-form"},"Tiny MobX Form"),Object(r.b)("h2",{id:""},Object(r.b)("a",Object.assign({parentName:"h2"},{href:"https://coveralls.io/github/dericgw/tiny-mobx-form?branch=master"}),Object(r.b)("img",{alt:"Coverage Status",src:"https://coveralls.io/repos/github/dericgw/tiny-mobx-form/badge.svg?branch=master"}))),Object(r.b)("p",null,"\u270c\ufe0fTiny (~2KB) tree-shakable MobX form library"),Object(r.b)("h2",{id:"features"},"Features"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Small, less than 2KB and tree-shakable"),Object(r.b)("li",{parentName:"ul"},"Written in TypeScript using MobX"),Object(r.b)("li",{parentName:"ul"},"Includes popular validations"),Object(r.b)("li",{parentName:"ul"},"Can add your own custom validations if needed")),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"npm i tiny-mobx-form")," or ",Object(r.b)("inlineCode",{parentName:"p"},"yarn add tiny-mobx-form")),Object(r.b)("h2",{id:"form"},Object(r.b)("inlineCode",{parentName:"h2"},"Form")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Form")," class is the main module that makes tiny-mobx-form work. The ",Object(r.b)("inlineCode",{parentName:"p"},"Form")," takes an array of\nobjects that define a ",Object(r.b)("inlineCode",{parentName:"p"},"Field"),". Here are some of the things that the ",Object(r.b)("inlineCode",{parentName:"p"},"Form")," does:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Creates fields"),Object(r.b)("li",{parentName:"ul"},"Observes fields"),Object(r.b)("li",{parentName:"ul"},"Observes values"),Object(r.b)("li",{parentName:"ul"},"Observes whether the field has been touched (the value has been changed)"),Object(r.b)("li",{parentName:"ul"},"Validation"),Object(r.b)("li",{parentName:"ul"},"Validation errors")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Form")," accepts three arguments:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object.assign({parentName:"tr"},{align:null}),"Argument Name"),Object(r.b)("th",Object.assign({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object.assign({parentName:"tr"},{align:null}),"Required"),Object(r.b)("th",Object.assign({parentName:"tr"},{align:null}),"Default"),Object(r.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fields")),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"IFormSchema[]")),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"true"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null})),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"This is the definition of each field in the form. (See the ",Object(r.b)("inlineCode",{parentName:"td"},"IFormSchema")," type below)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"initialValues")),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"`{ ","[fieldName: string]",": string"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"number }`"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"false"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"{}"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"options")),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"IFormOptions")),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"false"),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"{ additionalValidators: {} }")),Object(r.b)("td",Object.assign({parentName:"tr"},{align:null}),"These are extra options that can be passed into the form. (See the ",Object(r.b)("inlineCode",{parentName:"td"},"IFormOptions")," type below)")))),Object(r.b)("p",null,"Here is the ",Object(r.b)("inlineCode",{parentName:"p"},"IFormSchema")," type:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),"interface IFormSchema {\n  name: string;\n  label?: string;\n  placeholder?: string; \n  validation?: string;\n  initialValue?: string;\n}\n")),Object(r.b)("p",null,"Here is the ",Object(r.b)("inlineCode",{parentName:"p"},"IFormOptions")," type with the other dependent types. See the Validation section for a\nbetter explanation of adding additional validators:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),"interface IFormOptions {\n  additionalValidators: IValidators;\n}\n\ninterface IValidators {\n  [name: string]: IValidator;\n}\n\ninterface IValidator {\n  (field: IField, ...args: any[]): undefined | string;\n}\n")),Object(r.b)("h2",{id:"validation"},"Validation"),Object(r.b)("p",null,"Tiny MobX Form has the most common validations built in and also allows custom validations to be\nadded."),Object(r.b)("h3",{id:"validators"},"Validators"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"required - ",Object(r.b)("inlineCode",{parentName:"li"},"required")),Object(r.b)("li",{parentName:"ul"},"required if - ",Object(r.b)("inlineCode",{parentName:"li"},"required-if:<name of field>")," | ",Object(r.b)("inlineCode",{parentName:"li"},"required-if:last-name")),Object(r.b)("li",{parentName:"ul"},"length (string length) - ",Object(r.b)("inlineCode",{parentName:"li"},"length:<min>,<max>")," | ",Object(r.b)("inlineCode",{parentName:"li"},"length:4,30")),Object(r.b)("li",{parentName:"ul"},"match - ",Object(r.b)("inlineCode",{parentName:"li"},"match:<name of field>")," | ",Object(r.b)("inlineCode",{parentName:"li"},"match:password")),Object(r.b)("li",{parentName:"ul"},"letters - ",Object(r.b)("inlineCode",{parentName:"li"},"letters")),Object(r.b)("li",{parentName:"ul"},"email - ",Object(r.b)("inlineCode",{parentName:"li"},"email")),Object(r.b)("li",{parentName:"ul"},"phone number - ",Object(r.b)("inlineCode",{parentName:"li"},"phone")),Object(r.b)("li",{parentName:"ul"},"postal - ",Object(r.b)("inlineCode",{parentName:"li"},"postal")),Object(r.b)("li",{parentName:"ul"},"number - ",Object(r.b)("inlineCode",{parentName:"li"},"number")),Object(r.b)("li",{parentName:"ul"},"alphanumeric - ",Object(r.b)("inlineCode",{parentName:"li"},"alpha")),Object(r.b)("li",{parentName:"ul"},"size (number between) - ",Object(r.b)("inlineCode",{parentName:"li"},"size:<min>,<max>")," | ",Object(r.b)("inlineCode",{parentName:"li"},"size:50,100")),Object(r.b)("li",{parentName:"ul"},"one of (array list) - ",Object(r.b)("inlineCode",{parentName:"li"},"one-of:<comma separated list>")," | ",Object(r.b)("inlineCode",{parentName:"li"},"one-of:red,blue,green"))),Object(r.b)("h3",{id:"custom-validators"},"Custom Validators"),Object(r.b)("p",null,"If you would like to add your own custom validators, then you can pass those to the ",Object(r.b)("inlineCode",{parentName:"p"},"options")," argument\nof the ",Object(r.b)("inlineCode",{parentName:"p"},"Form")," constructor. You would pass them in as an object. The object key is the name of the\nvalidator and the value is the validator:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const additionalValidators = {\n  'file-size': fileSizeValidator,\n};\n")),Object(r.b)("p",null,"As an example, say we want to get the file size of a value and we want our validation to look like\nthis: ",Object(r.b)("inlineCode",{parentName:"p"},"file-size:2")," (that is 2KB). The validator would look like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"// The field is passed in so you can get any of its properties. \n// The other arguments are spread into the validator\nconst fileSizeValidator = (field, max) => {\n  if (!!field.value && field.value.size > max * 1024 /* 1,024 bytes in a KB */) {\n    return `The file size is too larger than ${max}KB`;\n  }\n  return undefined;\n}\n")),Object(r.b)("p",null,"Or, say we wanted a range for our file size that would look like this ",Object(r.b)("inlineCode",{parentName:"p"},"file-size:1,4"),". Then our\nvalidator would look like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const fileSizeValidator = (field, min, max) => {\n  if (!!field.value && (field.value.size < min * 1024 || field.value.size > max * 1024)) {\n    return `The file size must be between ${min}KB and ${max}KB`;\n  }\n  return undefined;\n}\n")),Object(r.b)("p",null,"And then to add that custom validator, you pass it into the ",Object(r.b)("inlineCode",{parentName:"p"},"Form")," at the time of construction:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const schema = [{\n  name: 'avatar',\n  // This is the validator with the min and max...\n  validation: 'file-size:0,2'\n}]\n\n// The name \"file-size\" is important because that is how it is referenced in the schema above.\nconst form = new Form(schema, {}, { 'file-size': fileSizeValidator });\n")),Object(r.b)("h2",{id:"examples"},"Examples"),Object(r.b)("h3",{id:"instant-validation-example"},"Instant Validation Example"),Object(r.b)(o.c,{__position:0,__code:"<InstantValidation />",__scope:{props:this?this.props:t,Playground:o.c,InstantValidation:m,OnblurValidation:p},__codesandbox:"",mdxType:"Playground"},Object(r.b)(m,{mdxType:"InstantValidation"})),Object(r.b)("p",null,"Here is the code for the Instant Validation Example above:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{}),"import React from 'react';\nimport { observer } from 'mobx-react';\nimport { TextInputField } from 'evergreen-ui';\nimport { Form } from 'tiny-mobx-form';\n\nconst schema = [\n  {\n    name: 'firstName',\n    placeholder: 'John',\n    label: 'First Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'lastName',\n    placeholder: 'Appleseed',\n    label: 'Last Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'email',\n    placeholder: 'jon@gmail.com',\n    label: 'Email',\n    validation: 'required|email',\n    initialValue: '',\n  },\n  {\n    name: 'age',\n    placeholder: '22',\n    label: 'Age',\n    validation: 'required|number|size:18,100',\n    initialValue: '',\n  },\n];\n\nconst { fields } = new Form(schema);\n\nfunction InstantValidation() {\n  return (\n    <div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"firstName\"\n          value={fields.firstName.value}\n          placeholder={fields.firstName.placeholder}\n          label={fields.firstName.label}\n          validationMessage={fields.firstName.isDirty && fields.firstName.hasErrors && fields.firstName.errors.join(' ')}\n          isInvalid={fields.firstName.isDirty && fields.firstName.hasErrors}\n          onChange={e => (fields.firstName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"lastName\"\n          value={fields.lastName.value}\n          placeholder={fields.lastName.placeholder}\n          label={fields.lastName.label}\n          validationMessage={fields.lastName.isDirty && fields.lastName.hasErrors && fields.lastName.errors.join(' ')}\n          isInvalid={fields.lastName.isDirty && fields.lastName.hasErrors}\n          onChange={e => (fields.lastName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"email\"\n          value={fields.email.value}\n          placeholder={fields.email.placeholder}\n          label={fields.email.label}\n          validationMessage={fields.email.isDirty && fields.email.hasErrors && fields.email.errors.join(' ')}\n          isInvalid={fields.email.isDirty && fields.email.hasErrors}\n          onChange={e => (fields.email.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"age\"\n          value={fields.age.value}\n          placeholder={fields.age.placeholder}\n          label={fields.age.label}\n          validationMessage={fields.age.isDirty && fields.age.hasErrors && fields.age.errors.join(' ')}\n          isInvalid={fields.age.isDirty && fields.age.hasErrors}\n          onChange={e => (fields.age.value = e.currentTarget.value)}\n          error={fields.age.isDirty && fields.age.hasErrors && fields.age.errors.join(' ')}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default observer(InstantValidation);\n")),Object(r.b)("h3",{id:"on-blur-validation-example"},"On Blur Validation Example"),Object(r.b)(o.c,{__position:1,__code:"<OnblurValidation />",__scope:{props:this?this.props:t,Playground:o.c,InstantValidation:m,OnblurValidation:p},__codesandbox:"",mdxType:"Playground"},Object(r.b)(p,{mdxType:"OnblurValidation"})),Object(r.b)("p",null,"Here is the code for the On Blur Validation Example above:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { TextInputField } from 'evergreen-ui';\nimport { Form } from 'tiny-mobx-form';\n\nconst schema = [\n  {\n    name: 'firstName',\n    placeholder: 'John',\n    label: 'First Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'lastName',\n    placeholder: 'Appleseed',\n    label: 'Last Name',\n    validation: 'required|letters|length:2,20',\n    initialValue: '',\n  },\n  {\n    name: 'email',\n    placeholder: 'jon@gmail.com',\n    label: 'Email',\n    validation: 'required|email',\n    initialValue: '',\n  },\n  {\n    name: 'age',\n    placeholder: '22',\n    label: 'Age',\n    validation: 'required|number|size:18,100',\n    initialValue: '',\n  },\n];\n\nconst { fields } = new Form(schema);\n\nfunction OnblurValidation() {\n  const [blurredFields, setBlurredFields] = useState([]);\n\n  return (\n    <div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"firstName\"\n          value={fields.firstName.value}\n          placeholder={fields.firstName.placeholder}\n          label={fields.firstName.label}\n          validationMessage={blurredFields.includes('firstName') && fields.firstName.hasErrors && fields.firstName.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'firstName'])}\n          isInvalid={blurredFields.includes('firstName') && fields.firstName.hasErrors}\n          onChange={e => (fields.firstName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"lastName\"\n          value={fields.lastName.value}\n          placeholder={fields.lastName.placeholder}\n          label={fields.lastName.label}\n          validationMessage={blurredFields.includes('lastName') && fields.lastName.hasErrors && fields.lastName.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'lastName'])}\n          isInvalid={blurredFields.includes('lastName') && fields.lastName.hasErrors}\n          onChange={e => (fields.lastName.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"email\"\n          value={fields.email.value}\n          placeholder={fields.email.placeholder}\n          label={fields.email.label}\n          validationMessage={blurredFields.includes('email') && fields.email.hasErrors && fields.email.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'email'])}\n          isInvalid={blurredFields.includes('email') && fields.email.hasErrors}\n          onChange={e => (fields.email.value = e.currentTarget.value)}\n        />\n      </div>\n      <div>\n        <TextInputField\n          required\n          type=\"text\"\n          name=\"age\"\n          value={fields.age.value}\n          placeholder={fields.age.placeholder}\n          label={fields.age.label}\n          validationMessage={blurredFields.includes('age') && fields.age.hasErrors && fields.age.errors.join(' ')}\n          onBlur={() => setBlurredFields([...blurredFields, 'age'])}\n          isInvalid={blurredFields.includes('age') && fields.age.hasErrors}\n          onChange={e => (fields.age.value = e.currentTarget.value)}\n          error={fields.age.isDirty && fields.age.hasErrors && fields.age.errors.join(' ')}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default observer(OnblurValidation);\n")))}N&&N===Object(N)&&Object.isExtensible(N)&&Object.defineProperty(N,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"example/introduction.mdx"}}),N.isMDXComponent=!0}}]);
//# sourceMappingURL=example-introduction.c2c899bf4a163d1ee250.js.map